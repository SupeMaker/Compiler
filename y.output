State 0 conflicts: 2 shift/reduce
State 141 conflicts: 1 shift/reduce


Grammar

    0 $accept: program $end

    1 program: declaration_list

    2 declaration_list: declaration_list declaration
    3                 | declaration
    4                 | comment

    5 declaration: var_declaration ';'
    6            | fun_declaration

    7 var_declaration: type_specifier ID
    8                | type_specifier ID '[' NUM ']'
    9                | type_specifier ID '=' expression

   10 cout_stmt: KEYWORD_OUT KEYWORD_DOUBLE_LESS ID ';'

   11 type_specifier: KEYWORD_INT
   12               | KEYWORD_VOID

   13 fun_declaration: type_specifier ID '(' params ')' compound_stmt
   14                | type_specifier ID '(' params ')' ';'

   15 comment: comment MULTI_LINE_ANNOTATION
   16        | ε

   17 params: param_list
   18       | KEYWORD_VOID
   19       | ε

   20 param_list: param_list ',' param
   21           | param

   22 param: type_specifier ID
   23      | type_specifier ID '[' ']'

   24 compound_stmt: '{' local_declarations statement_list '}'

   25 local_declarations: local_declarations var_declaration ';'
   26                   | ε

   27 statement_list: statement_list statement comment
   28               | ε

   29 statement: expression_stmt
   30          | compound_stmt
   31          | selection_stmt
   32          | iteration_stmt
   33          | for_stmt
   34          | continue_stmt
   35          | break_stmt
   36          | cout_stmt
   37          | return_stmt

   38 expression_stmt: expression ';'
   39                | ';'

   40 selection_stmt: KEYWORD_IF '(' expression ')' statement
   41               | KEYWORD_IF '(' expression ')' statement KEYWORD_ELSE statement

   42 $@1: ε

   43 iteration_stmt: KEYWORD_WHILE '(' expression $@1 ')' statement

   44 for_stmt: KEYWORD_FOR '(' ';' expression ';' ')' statement
   45         | KEYWORD_FOR '(' expression ';' expression ';' ')' statement
   46         | KEYWORD_FOR '(' expression ';' expression ';' expression ')' statement
   47         | KEYWORD_FOR '(' ';' expression ';' expression ')' statement
   48         | KEYWORD_FOR '(' var_declaration ';' expression ';' expression ')' statement
   49         | KEYWORD_FOR '(' var_declaration ';' expression ';' ')' statement

   50 return_stmt: KEYWORD_RETURN ';'
   51            | KEYWORD_RETURN expression ';'

   52 continue_stmt: KEYWORD_CONTINUE ';'

   53 break_stmt: KEYWORD_BREAK ';'

   54 expression: var '=' expression
   55           | var DOUBLE_ADD
   56           | var DOUBLE_SUB
   57           | simple_expression KEYWORD_AND simple_expression
   58           | simple_expression KEYWORD_OR simple_expression
   59           | simple_expression

   60 var: ID
   61    | ID '[' expression ']'

   62 simple_expression: additive_expression LESS_EQUAL_THAN additive_expression
   63                  | additive_expression LESS_THAN additive_expression
   64                  | additive_expression GREAT_THAN additive_expression
   65                  | additive_expression GREAT_EQUAL_THAN additive_expression
   66                  | additive_expression DOUBLE_EQUAL additive_expression
   67                  | additive_expression NOT_EQUAL additive_expression
   68                  | additive_expression
   69                  | KEYWORD_NO simple_expression

   70 additive_expression: additive_expression '+' term
   71                    | additive_expression '-' term
   72                    | term

   73 term: term '^' factor
   74     | term '*' factor
   75     | term '/' factor
   76     | term '%' factor
   77     | factor

   78 factor: '(' expression ')'
   79       | var
   80       | call
   81       | NUM
   82       | FNUM

   83 call: ID '(' args ')'

   84 args: arg_list
   85     | ε

   86 arg_list: arg_list ',' expression
   87         | expression


Terminals, with rules where they appear

    $end (0) 0
    '%' (37) 76
    '(' (40) 13 14 40 41 43 44 45 46 47 48 49 78 83
    ')' (41) 13 14 40 41 43 44 45 46 47 48 49 78 83
    '*' (42) 74
    '+' (43) 70
    ',' (44) 20 86
    '-' (45) 71
    '/' (47) 75
    ';' (59) 5 10 14 25 38 39 44 45 46 47 48 49 50 51 52 53
    '=' (61) 9 54
    '[' (91) 8 23 61
    ']' (93) 8 23 61
    '^' (94) 73
    '{' (123) 24
    '}' (125) 24
    error (256)
    ID <name> (258) 7 8 9 10 13 14 22 23 60 61 83
    NUM <name> (259) 8 81
    FNUM <name> (260) 82
    LESS_EQUAL_THAN <name> (261) 62
    LESS_THAN <name> (262) 63
    GREAT_THAN <name> (263) 64
    GREAT_EQUAL_THAN <name> (264) 65
    DOUBLE_EQUAL <name> (265) 66
    NOT_EQUAL <name> (266) 67
    KEYWORD_DOUBLE_LESS <name> (267) 10
    KEYWORD_OUT <name> (268) 10
    KEYWORD_ELSE <name> (269) 41
    KEYWORD_IF <name> (270) 40 41
    KEYWORD_INT <name> (271) 11
    KEYWORD_RETURN <name> (272) 50 51
    KEYWORD_VOID <name> (273) 12 18
    KEYWORD_WHILE <name> (274) 43
    MULTI_LINE_ANNOTATION <name> (275) 15
    KEYWORD_AND <name> (276) 57
    KEYWORD_OR <name> (277) 58
    KEYWORD_NO <name> (278) 69
    KEYWORD_FOR <name> (279) 44 45 46 47 48 49
    KEYWORD_BREAK <name> (280) 53
    KEYWORD_CONTINUE <name> (281) 52
    DOUBLE_ADD <name> (282) 55
    DOUBLE_SUB <name> (283) 56


Nonterminals, with rules where they appear

    $accept (44)
        on left: 0
    program <node> (45)
        on left: 1
        on right: 0
    declaration_list <node> (46)
        on left: 2 3 4
        on right: 1 2
    declaration <node> (47)
        on left: 5 6
        on right: 2 3
    var_declaration <node> (48)
        on left: 7 8 9
        on right: 5 25 48 49
    cout_stmt <node> (49)
        on left: 10
        on right: 36
    type_specifier <node> (50)
        on left: 11 12
        on right: 7 8 9 13 14 22 23
    fun_declaration <node> (51)
        on left: 13 14
        on right: 6
    comment <node> (52)
        on left: 15 16
        on right: 4 15 27
    params <node> (53)
        on left: 17 18 19
        on right: 13 14
    param_list <node> (54)
        on left: 20 21
        on right: 17 20
    param <node> (55)
        on left: 22 23
        on right: 20 21
    compound_stmt <node> (56)
        on left: 24
        on right: 13 30
    local_declarations <node> (57)
        on left: 25 26
        on right: 24 25
    statement_list <node> (58)
        on left: 27 28
        on right: 24 27
    statement <node> (59)
        on left: 29 30 31 32 33 34 35 36 37
        on right: 27 40 41 43 44 45 46 47 48 49
    expression_stmt <node> (60)
        on left: 38 39
        on right: 29
    selection_stmt <node> (61)
        on left: 40 41
        on right: 31
    iteration_stmt <node> (62)
        on left: 43
        on right: 32
    $@1 (63)
        on left: 42
        on right: 43
    for_stmt <node> (64)
        on left: 44 45 46 47 48 49
        on right: 33
    return_stmt <node> (65)
        on left: 50 51
        on right: 37
    continue_stmt <node> (66)
        on left: 52
        on right: 34
    break_stmt <node> (67)
        on left: 53
        on right: 35
    expression <node> (68)
        on left: 54 55 56 57 58 59
        on right: 9 38 40 41 43 44 45 46 47 48 49 51 54 61 78 86 87
    var <node> (69)
        on left: 60 61
        on right: 54 55 56 79
    simple_expression <node> (70)
        on left: 62 63 64 65 66 67 68 69
        on right: 57 58 59 69
    additive_expression <node> (71)
        on left: 70 71 72
        on right: 62 63 64 65 66 67 68 70 71
    term <node> (72)
        on left: 73 74 75 76 77
        on right: 70 71 72 73 74 75 76
    factor <node> (73)
        on left: 78 79 80 81 82
        on right: 73 74 75 76 77
    call <node> (74)
        on left: 83
        on right: 80
    args <node> (75)
        on left: 84 85
        on right: 83
    arg_list <node> (76)
        on left: 86 87
        on right: 84 86


State 0

    0 $accept: • program $end

    KEYWORD_INT   shift, and go to state 1
    KEYWORD_VOID  shift, and go to state 2

    KEYWORD_INT   [reduce using rule 16 (comment)]
    KEYWORD_VOID  [reduce using rule 16 (comment)]
    $default      reduce using rule 16 (comment)

    program           go to state 3
    declaration_list  go to state 4
    declaration       go to state 5
    var_declaration   go to state 6
    type_specifier    go to state 7
    fun_declaration   go to state 8
    comment           go to state 9


State 1

   11 type_specifier: KEYWORD_INT •

    $default  reduce using rule 11 (type_specifier)


State 2

   12 type_specifier: KEYWORD_VOID •

    $default  reduce using rule 12 (type_specifier)


State 3

    0 $accept: program • $end

    $end  shift, and go to state 10


State 4

    1 program: declaration_list •
    2 declaration_list: declaration_list • declaration

    KEYWORD_INT   shift, and go to state 1
    KEYWORD_VOID  shift, and go to state 2

    $default  reduce using rule 1 (program)

    declaration      go to state 11
    var_declaration  go to state 6
    type_specifier   go to state 7
    fun_declaration  go to state 8


State 5

    3 declaration_list: declaration •

    $default  reduce using rule 3 (declaration_list)


State 6

    5 declaration: var_declaration • ';'

    ';'  shift, and go to state 12


State 7

    7 var_declaration: type_specifier • ID
    8                | type_specifier • ID '[' NUM ']'
    9                | type_specifier • ID '=' expression
   13 fun_declaration: type_specifier • ID '(' params ')' compound_stmt
   14                | type_specifier • ID '(' params ')' ';'

    ID  shift, and go to state 13


State 8

    6 declaration: fun_declaration •

    $default  reduce using rule 6 (declaration)


State 9

    4 declaration_list: comment •
   15 comment: comment • MULTI_LINE_ANNOTATION

    MULTI_LINE_ANNOTATION  shift, and go to state 14

    $default  reduce using rule 4 (declaration_list)


State 10

    0 $accept: program $end •

    $default  accept


State 11

    2 declaration_list: declaration_list declaration •

    $default  reduce using rule 2 (declaration_list)


State 12

    5 declaration: var_declaration ';' •

    $default  reduce using rule 5 (declaration)


State 13

    7 var_declaration: type_specifier ID •
    8                | type_specifier ID • '[' NUM ']'
    9                | type_specifier ID • '=' expression
   13 fun_declaration: type_specifier ID • '(' params ')' compound_stmt
   14                | type_specifier ID • '(' params ')' ';'

    '['  shift, and go to state 15
    '='  shift, and go to state 16
    '('  shift, and go to state 17

    $default  reduce using rule 7 (var_declaration)


State 14

   15 comment: comment MULTI_LINE_ANNOTATION •

    $default  reduce using rule 15 (comment)


State 15

    8 var_declaration: type_specifier ID '[' • NUM ']'

    NUM  shift, and go to state 18


State 16

    9 var_declaration: type_specifier ID '=' • expression

    ID          shift, and go to state 19
    NUM         shift, and go to state 20
    FNUM        shift, and go to state 21
    KEYWORD_NO  shift, and go to state 22
    '('         shift, and go to state 23

    expression           go to state 24
    var                  go to state 25
    simple_expression    go to state 26
    additive_expression  go to state 27
    term                 go to state 28
    factor               go to state 29
    call                 go to state 30


State 17

   13 fun_declaration: type_specifier ID '(' • params ')' compound_stmt
   14                | type_specifier ID '(' • params ')' ';'

    KEYWORD_INT   shift, and go to state 1
    KEYWORD_VOID  shift, and go to state 31

    $default  reduce using rule 19 (params)

    type_specifier  go to state 32
    params          go to state 33
    param_list      go to state 34
    param           go to state 35


State 18

    8 var_declaration: type_specifier ID '[' NUM • ']'

    ']'  shift, and go to state 36


State 19

   60 var: ID •
   61    | ID • '[' expression ']'
   83 call: ID • '(' args ')'

    '['  shift, and go to state 37
    '('  shift, and go to state 38

    $default  reduce using rule 60 (var)


State 20

   81 factor: NUM •

    $default  reduce using rule 81 (factor)


State 21

   82 factor: FNUM •

    $default  reduce using rule 82 (factor)


State 22

   69 simple_expression: KEYWORD_NO • simple_expression

    ID          shift, and go to state 19
    NUM         shift, and go to state 20
    FNUM        shift, and go to state 21
    KEYWORD_NO  shift, and go to state 22
    '('         shift, and go to state 23

    var                  go to state 39
    simple_expression    go to state 40
    additive_expression  go to state 27
    term                 go to state 28
    factor               go to state 29
    call                 go to state 30


State 23

   78 factor: '(' • expression ')'

    ID          shift, and go to state 19
    NUM         shift, and go to state 20
    FNUM        shift, and go to state 21
    KEYWORD_NO  shift, and go to state 22
    '('         shift, and go to state 23

    expression           go to state 41
    var                  go to state 25
    simple_expression    go to state 26
    additive_expression  go to state 27
    term                 go to state 28
    factor               go to state 29
    call                 go to state 30


State 24

    9 var_declaration: type_specifier ID '=' expression •

    $default  reduce using rule 9 (var_declaration)


State 25

   54 expression: var • '=' expression
   55           | var • DOUBLE_ADD
   56           | var • DOUBLE_SUB
   79 factor: var •

    DOUBLE_ADD  shift, and go to state 42
    DOUBLE_SUB  shift, and go to state 43
    '='         shift, and go to state 44

    $default  reduce using rule 79 (factor)


State 26

   57 expression: simple_expression • KEYWORD_AND simple_expression
   58           | simple_expression • KEYWORD_OR simple_expression
   59           | simple_expression •

    KEYWORD_AND  shift, and go to state 45
    KEYWORD_OR   shift, and go to state 46

    $default  reduce using rule 59 (expression)


State 27

   62 simple_expression: additive_expression • LESS_EQUAL_THAN additive_expression
   63                  | additive_expression • LESS_THAN additive_expression
   64                  | additive_expression • GREAT_THAN additive_expression
   65                  | additive_expression • GREAT_EQUAL_THAN additive_expression
   66                  | additive_expression • DOUBLE_EQUAL additive_expression
   67                  | additive_expression • NOT_EQUAL additive_expression
   68                  | additive_expression •
   70 additive_expression: additive_expression • '+' term
   71                    | additive_expression • '-' term

    LESS_EQUAL_THAN   shift, and go to state 47
    LESS_THAN         shift, and go to state 48
    GREAT_THAN        shift, and go to state 49
    GREAT_EQUAL_THAN  shift, and go to state 50
    DOUBLE_EQUAL      shift, and go to state 51
    NOT_EQUAL         shift, and go to state 52
    '+'               shift, and go to state 53
    '-'               shift, and go to state 54

    $default  reduce using rule 68 (simple_expression)


State 28

   72 additive_expression: term •
   73 term: term • '^' factor
   74     | term • '*' factor
   75     | term • '/' factor
   76     | term • '%' factor

    '*'  shift, and go to state 55
    '/'  shift, and go to state 56
    '^'  shift, and go to state 57
    '%'  shift, and go to state 58

    $default  reduce using rule 72 (additive_expression)


State 29

   77 term: factor •

    $default  reduce using rule 77 (term)


State 30

   80 factor: call •

    $default  reduce using rule 80 (factor)


State 31

   12 type_specifier: KEYWORD_VOID •
   18 params: KEYWORD_VOID •

    ')'       reduce using rule 18 (params)
    $default  reduce using rule 12 (type_specifier)


State 32

   22 param: type_specifier • ID
   23      | type_specifier • ID '[' ']'

    ID  shift, and go to state 59


State 33

   13 fun_declaration: type_specifier ID '(' params • ')' compound_stmt
   14                | type_specifier ID '(' params • ')' ';'

    ')'  shift, and go to state 60


State 34

   17 params: param_list •
   20 param_list: param_list • ',' param

    ','  shift, and go to state 61

    $default  reduce using rule 17 (params)


State 35

   21 param_list: param •

    $default  reduce using rule 21 (param_list)


State 36

    8 var_declaration: type_specifier ID '[' NUM ']' •

    $default  reduce using rule 8 (var_declaration)


State 37

   61 var: ID '[' • expression ']'

    ID          shift, and go to state 19
    NUM         shift, and go to state 20
    FNUM        shift, and go to state 21
    KEYWORD_NO  shift, and go to state 22
    '('         shift, and go to state 23

    expression           go to state 62
    var                  go to state 25
    simple_expression    go to state 26
    additive_expression  go to state 27
    term                 go to state 28
    factor               go to state 29
    call                 go to state 30


State 38

   83 call: ID '(' • args ')'

    ID          shift, and go to state 19
    NUM         shift, and go to state 20
    FNUM        shift, and go to state 21
    KEYWORD_NO  shift, and go to state 22
    '('         shift, and go to state 23

    $default  reduce using rule 85 (args)

    expression           go to state 63
    var                  go to state 25
    simple_expression    go to state 26
    additive_expression  go to state 27
    term                 go to state 28
    factor               go to state 29
    call                 go to state 30
    args                 go to state 64
    arg_list             go to state 65


State 39

   79 factor: var •

    $default  reduce using rule 79 (factor)


State 40

   69 simple_expression: KEYWORD_NO simple_expression •

    $default  reduce using rule 69 (simple_expression)


State 41

   78 factor: '(' expression • ')'

    ')'  shift, and go to state 66


State 42

   55 expression: var DOUBLE_ADD •

    $default  reduce using rule 55 (expression)


State 43

   56 expression: var DOUBLE_SUB •

    $default  reduce using rule 56 (expression)


State 44

   54 expression: var '=' • expression

    ID          shift, and go to state 19
    NUM         shift, and go to state 20
    FNUM        shift, and go to state 21
    KEYWORD_NO  shift, and go to state 22
    '('         shift, and go to state 23

    expression           go to state 67
    var                  go to state 25
    simple_expression    go to state 26
    additive_expression  go to state 27
    term                 go to state 28
    factor               go to state 29
    call                 go to state 30


State 45

   57 expression: simple_expression KEYWORD_AND • simple_expression

    ID          shift, and go to state 19
    NUM         shift, and go to state 20
    FNUM        shift, and go to state 21
    KEYWORD_NO  shift, and go to state 22
    '('         shift, and go to state 23

    var                  go to state 39
    simple_expression    go to state 68
    additive_expression  go to state 27
    term                 go to state 28
    factor               go to state 29
    call                 go to state 30


State 46

   58 expression: simple_expression KEYWORD_OR • simple_expression

    ID          shift, and go to state 19
    NUM         shift, and go to state 20
    FNUM        shift, and go to state 21
    KEYWORD_NO  shift, and go to state 22
    '('         shift, and go to state 23

    var                  go to state 39
    simple_expression    go to state 69
    additive_expression  go to state 27
    term                 go to state 28
    factor               go to state 29
    call                 go to state 30


State 47

   62 simple_expression: additive_expression LESS_EQUAL_THAN • additive_expression

    ID    shift, and go to state 19
    NUM   shift, and go to state 20
    FNUM  shift, and go to state 21
    '('   shift, and go to state 23

    var                  go to state 39
    additive_expression  go to state 70
    term                 go to state 28
    factor               go to state 29
    call                 go to state 30


State 48

   63 simple_expression: additive_expression LESS_THAN • additive_expression

    ID    shift, and go to state 19
    NUM   shift, and go to state 20
    FNUM  shift, and go to state 21
    '('   shift, and go to state 23

    var                  go to state 39
    additive_expression  go to state 71
    term                 go to state 28
    factor               go to state 29
    call                 go to state 30


State 49

   64 simple_expression: additive_expression GREAT_THAN • additive_expression

    ID    shift, and go to state 19
    NUM   shift, and go to state 20
    FNUM  shift, and go to state 21
    '('   shift, and go to state 23

    var                  go to state 39
    additive_expression  go to state 72
    term                 go to state 28
    factor               go to state 29
    call                 go to state 30


State 50

   65 simple_expression: additive_expression GREAT_EQUAL_THAN • additive_expression

    ID    shift, and go to state 19
    NUM   shift, and go to state 20
    FNUM  shift, and go to state 21
    '('   shift, and go to state 23

    var                  go to state 39
    additive_expression  go to state 73
    term                 go to state 28
    factor               go to state 29
    call                 go to state 30


State 51

   66 simple_expression: additive_expression DOUBLE_EQUAL • additive_expression

    ID    shift, and go to state 19
    NUM   shift, and go to state 20
    FNUM  shift, and go to state 21
    '('   shift, and go to state 23

    var                  go to state 39
    additive_expression  go to state 74
    term                 go to state 28
    factor               go to state 29
    call                 go to state 30


State 52

   67 simple_expression: additive_expression NOT_EQUAL • additive_expression

    ID    shift, and go to state 19
    NUM   shift, and go to state 20
    FNUM  shift, and go to state 21
    '('   shift, and go to state 23

    var                  go to state 39
    additive_expression  go to state 75
    term                 go to state 28
    factor               go to state 29
    call                 go to state 30


State 53

   70 additive_expression: additive_expression '+' • term

    ID    shift, and go to state 19
    NUM   shift, and go to state 20
    FNUM  shift, and go to state 21
    '('   shift, and go to state 23

    var     go to state 39
    term    go to state 76
    factor  go to state 29
    call    go to state 30


State 54

   71 additive_expression: additive_expression '-' • term

    ID    shift, and go to state 19
    NUM   shift, and go to state 20
    FNUM  shift, and go to state 21
    '('   shift, and go to state 23

    var     go to state 39
    term    go to state 77
    factor  go to state 29
    call    go to state 30


State 55

   74 term: term '*' • factor

    ID    shift, and go to state 19
    NUM   shift, and go to state 20
    FNUM  shift, and go to state 21
    '('   shift, and go to state 23

    var     go to state 39
    factor  go to state 78
    call    go to state 30


State 56

   75 term: term '/' • factor

    ID    shift, and go to state 19
    NUM   shift, and go to state 20
    FNUM  shift, and go to state 21
    '('   shift, and go to state 23

    var     go to state 39
    factor  go to state 79
    call    go to state 30


State 57

   73 term: term '^' • factor

    ID    shift, and go to state 19
    NUM   shift, and go to state 20
    FNUM  shift, and go to state 21
    '('   shift, and go to state 23

    var     go to state 39
    factor  go to state 80
    call    go to state 30


State 58

   76 term: term '%' • factor

    ID    shift, and go to state 19
    NUM   shift, and go to state 20
    FNUM  shift, and go to state 21
    '('   shift, and go to state 23

    var     go to state 39
    factor  go to state 81
    call    go to state 30


State 59

   22 param: type_specifier ID •
   23      | type_specifier ID • '[' ']'

    '['  shift, and go to state 82

    $default  reduce using rule 22 (param)


State 60

   13 fun_declaration: type_specifier ID '(' params ')' • compound_stmt
   14                | type_specifier ID '(' params ')' • ';'

    ';'  shift, and go to state 83
    '{'  shift, and go to state 84

    compound_stmt  go to state 85


State 61

   20 param_list: param_list ',' • param

    KEYWORD_INT   shift, and go to state 1
    KEYWORD_VOID  shift, and go to state 2

    type_specifier  go to state 32
    param           go to state 86


State 62

   61 var: ID '[' expression • ']'

    ']'  shift, and go to state 87


State 63

   87 arg_list: expression •

    $default  reduce using rule 87 (arg_list)


State 64

   83 call: ID '(' args • ')'

    ')'  shift, and go to state 88


State 65

   84 args: arg_list •
   86 arg_list: arg_list • ',' expression

    ','  shift, and go to state 89

    $default  reduce using rule 84 (args)


State 66

   78 factor: '(' expression ')' •

    $default  reduce using rule 78 (factor)


State 67

   54 expression: var '=' expression •

    $default  reduce using rule 54 (expression)


State 68

   57 expression: simple_expression KEYWORD_AND simple_expression •

    $default  reduce using rule 57 (expression)


State 69

   58 expression: simple_expression KEYWORD_OR simple_expression •

    $default  reduce using rule 58 (expression)


State 70

   62 simple_expression: additive_expression LESS_EQUAL_THAN additive_expression •
   70 additive_expression: additive_expression • '+' term
   71                    | additive_expression • '-' term

    '+'  shift, and go to state 53
    '-'  shift, and go to state 54

    $default  reduce using rule 62 (simple_expression)


State 71

   63 simple_expression: additive_expression LESS_THAN additive_expression •
   70 additive_expression: additive_expression • '+' term
   71                    | additive_expression • '-' term

    '+'  shift, and go to state 53
    '-'  shift, and go to state 54

    $default  reduce using rule 63 (simple_expression)


State 72

   64 simple_expression: additive_expression GREAT_THAN additive_expression •
   70 additive_expression: additive_expression • '+' term
   71                    | additive_expression • '-' term

    '+'  shift, and go to state 53
    '-'  shift, and go to state 54

    $default  reduce using rule 64 (simple_expression)


State 73

   65 simple_expression: additive_expression GREAT_EQUAL_THAN additive_expression •
   70 additive_expression: additive_expression • '+' term
   71                    | additive_expression • '-' term

    '+'  shift, and go to state 53
    '-'  shift, and go to state 54

    $default  reduce using rule 65 (simple_expression)


State 74

   66 simple_expression: additive_expression DOUBLE_EQUAL additive_expression •
   70 additive_expression: additive_expression • '+' term
   71                    | additive_expression • '-' term

    '+'  shift, and go to state 53
    '-'  shift, and go to state 54

    $default  reduce using rule 66 (simple_expression)


State 75

   67 simple_expression: additive_expression NOT_EQUAL additive_expression •
   70 additive_expression: additive_expression • '+' term
   71                    | additive_expression • '-' term

    '+'  shift, and go to state 53
    '-'  shift, and go to state 54

    $default  reduce using rule 67 (simple_expression)


State 76

   70 additive_expression: additive_expression '+' term •
   73 term: term • '^' factor
   74     | term • '*' factor
   75     | term • '/' factor
   76     | term • '%' factor

    '*'  shift, and go to state 55
    '/'  shift, and go to state 56
    '^'  shift, and go to state 57
    '%'  shift, and go to state 58

    $default  reduce using rule 70 (additive_expression)


State 77

   71 additive_expression: additive_expression '-' term •
   73 term: term • '^' factor
   74     | term • '*' factor
   75     | term • '/' factor
   76     | term • '%' factor

    '*'  shift, and go to state 55
    '/'  shift, and go to state 56
    '^'  shift, and go to state 57
    '%'  shift, and go to state 58

    $default  reduce using rule 71 (additive_expression)


State 78

   74 term: term '*' factor •

    $default  reduce using rule 74 (term)


State 79

   75 term: term '/' factor •

    $default  reduce using rule 75 (term)


State 80

   73 term: term '^' factor •

    $default  reduce using rule 73 (term)


State 81

   76 term: term '%' factor •

    $default  reduce using rule 76 (term)


State 82

   23 param: type_specifier ID '[' • ']'

    ']'  shift, and go to state 90


State 83

   14 fun_declaration: type_specifier ID '(' params ')' ';' •

    $default  reduce using rule 14 (fun_declaration)


State 84

   24 compound_stmt: '{' • local_declarations statement_list '}'

    $default  reduce using rule 26 (local_declarations)

    local_declarations  go to state 91


State 85

   13 fun_declaration: type_specifier ID '(' params ')' compound_stmt •

    $default  reduce using rule 13 (fun_declaration)


State 86

   20 param_list: param_list ',' param •

    $default  reduce using rule 20 (param_list)


State 87

   61 var: ID '[' expression ']' •

    $default  reduce using rule 61 (var)


State 88

   83 call: ID '(' args ')' •

    $default  reduce using rule 83 (call)


State 89

   86 arg_list: arg_list ',' • expression

    ID          shift, and go to state 19
    NUM         shift, and go to state 20
    FNUM        shift, and go to state 21
    KEYWORD_NO  shift, and go to state 22
    '('         shift, and go to state 23

    expression           go to state 92
    var                  go to state 25
    simple_expression    go to state 26
    additive_expression  go to state 27
    term                 go to state 28
    factor               go to state 29
    call                 go to state 30


State 90

   23 param: type_specifier ID '[' ']' •

    $default  reduce using rule 23 (param)


State 91

   24 compound_stmt: '{' local_declarations • statement_list '}'
   25 local_declarations: local_declarations • var_declaration ';'

    KEYWORD_INT   shift, and go to state 1
    KEYWORD_VOID  shift, and go to state 2

    $default  reduce using rule 28 (statement_list)

    var_declaration  go to state 93
    type_specifier   go to state 94
    statement_list   go to state 95


State 92

   86 arg_list: arg_list ',' expression •

    $default  reduce using rule 86 (arg_list)


State 93

   25 local_declarations: local_declarations var_declaration • ';'

    ';'  shift, and go to state 96


State 94

    7 var_declaration: type_specifier • ID
    8                | type_specifier • ID '[' NUM ']'
    9                | type_specifier • ID '=' expression

    ID  shift, and go to state 97


State 95

   24 compound_stmt: '{' local_declarations statement_list • '}'
   27 statement_list: statement_list • statement comment

    ID                shift, and go to state 19
    NUM               shift, and go to state 20
    FNUM              shift, and go to state 21
    KEYWORD_OUT       shift, and go to state 98
    KEYWORD_IF        shift, and go to state 99
    KEYWORD_RETURN    shift, and go to state 100
    KEYWORD_WHILE     shift, and go to state 101
    KEYWORD_NO        shift, and go to state 22
    KEYWORD_FOR       shift, and go to state 102
    KEYWORD_BREAK     shift, and go to state 103
    KEYWORD_CONTINUE  shift, and go to state 104
    ';'               shift, and go to state 105
    '('               shift, and go to state 23
    '{'               shift, and go to state 84
    '}'               shift, and go to state 106

    cout_stmt            go to state 107
    compound_stmt        go to state 108
    statement            go to state 109
    expression_stmt      go to state 110
    selection_stmt       go to state 111
    iteration_stmt       go to state 112
    for_stmt             go to state 113
    return_stmt          go to state 114
    continue_stmt        go to state 115
    break_stmt           go to state 116
    expression           go to state 117
    var                  go to state 25
    simple_expression    go to state 26
    additive_expression  go to state 27
    term                 go to state 28
    factor               go to state 29
    call                 go to state 30


State 96

   25 local_declarations: local_declarations var_declaration ';' •

    $default  reduce using rule 25 (local_declarations)


State 97

    7 var_declaration: type_specifier ID •
    8                | type_specifier ID • '[' NUM ']'
    9                | type_specifier ID • '=' expression

    '['  shift, and go to state 15
    '='  shift, and go to state 16

    $default  reduce using rule 7 (var_declaration)


State 98

   10 cout_stmt: KEYWORD_OUT • KEYWORD_DOUBLE_LESS ID ';'

    KEYWORD_DOUBLE_LESS  shift, and go to state 118


State 99

   40 selection_stmt: KEYWORD_IF • '(' expression ')' statement
   41               | KEYWORD_IF • '(' expression ')' statement KEYWORD_ELSE statement

    '('  shift, and go to state 119


State 100

   50 return_stmt: KEYWORD_RETURN • ';'
   51            | KEYWORD_RETURN • expression ';'

    ID          shift, and go to state 19
    NUM         shift, and go to state 20
    FNUM        shift, and go to state 21
    KEYWORD_NO  shift, and go to state 22
    ';'         shift, and go to state 120
    '('         shift, and go to state 23

    expression           go to state 121
    var                  go to state 25
    simple_expression    go to state 26
    additive_expression  go to state 27
    term                 go to state 28
    factor               go to state 29
    call                 go to state 30


State 101

   43 iteration_stmt: KEYWORD_WHILE • '(' expression $@1 ')' statement

    '('  shift, and go to state 122


State 102

   44 for_stmt: KEYWORD_FOR • '(' ';' expression ';' ')' statement
   45         | KEYWORD_FOR • '(' expression ';' expression ';' ')' statement
   46         | KEYWORD_FOR • '(' expression ';' expression ';' expression ')' statement
   47         | KEYWORD_FOR • '(' ';' expression ';' expression ')' statement
   48         | KEYWORD_FOR • '(' var_declaration ';' expression ';' expression ')' statement
   49         | KEYWORD_FOR • '(' var_declaration ';' expression ';' ')' statement

    '('  shift, and go to state 123


State 103

   53 break_stmt: KEYWORD_BREAK • ';'

    ';'  shift, and go to state 124


State 104

   52 continue_stmt: KEYWORD_CONTINUE • ';'

    ';'  shift, and go to state 125


State 105

   39 expression_stmt: ';' •

    $default  reduce using rule 39 (expression_stmt)


State 106

   24 compound_stmt: '{' local_declarations statement_list '}' •

    $default  reduce using rule 24 (compound_stmt)


State 107

   36 statement: cout_stmt •

    $default  reduce using rule 36 (statement)


State 108

   30 statement: compound_stmt •

    $default  reduce using rule 30 (statement)


State 109

   27 statement_list: statement_list statement • comment

    $default  reduce using rule 16 (comment)

    comment  go to state 126


State 110

   29 statement: expression_stmt •

    $default  reduce using rule 29 (statement)


State 111

   31 statement: selection_stmt •

    $default  reduce using rule 31 (statement)


State 112

   32 statement: iteration_stmt •

    $default  reduce using rule 32 (statement)


State 113

   33 statement: for_stmt •

    $default  reduce using rule 33 (statement)


State 114

   37 statement: return_stmt •

    $default  reduce using rule 37 (statement)


State 115

   34 statement: continue_stmt •

    $default  reduce using rule 34 (statement)


State 116

   35 statement: break_stmt •

    $default  reduce using rule 35 (statement)


State 117

   38 expression_stmt: expression • ';'

    ';'  shift, and go to state 127


State 118

   10 cout_stmt: KEYWORD_OUT KEYWORD_DOUBLE_LESS • ID ';'

    ID  shift, and go to state 128


State 119

   40 selection_stmt: KEYWORD_IF '(' • expression ')' statement
   41               | KEYWORD_IF '(' • expression ')' statement KEYWORD_ELSE statement

    ID          shift, and go to state 19
    NUM         shift, and go to state 20
    FNUM        shift, and go to state 21
    KEYWORD_NO  shift, and go to state 22
    '('         shift, and go to state 23

    expression           go to state 129
    var                  go to state 25
    simple_expression    go to state 26
    additive_expression  go to state 27
    term                 go to state 28
    factor               go to state 29
    call                 go to state 30


State 120

   50 return_stmt: KEYWORD_RETURN ';' •

    $default  reduce using rule 50 (return_stmt)


State 121

   51 return_stmt: KEYWORD_RETURN expression • ';'

    ';'  shift, and go to state 130


State 122

   43 iteration_stmt: KEYWORD_WHILE '(' • expression $@1 ')' statement

    ID          shift, and go to state 19
    NUM         shift, and go to state 20
    FNUM        shift, and go to state 21
    KEYWORD_NO  shift, and go to state 22
    '('         shift, and go to state 23

    expression           go to state 131
    var                  go to state 25
    simple_expression    go to state 26
    additive_expression  go to state 27
    term                 go to state 28
    factor               go to state 29
    call                 go to state 30


State 123

   44 for_stmt: KEYWORD_FOR '(' • ';' expression ';' ')' statement
   45         | KEYWORD_FOR '(' • expression ';' expression ';' ')' statement
   46         | KEYWORD_FOR '(' • expression ';' expression ';' expression ')' statement
   47         | KEYWORD_FOR '(' • ';' expression ';' expression ')' statement
   48         | KEYWORD_FOR '(' • var_declaration ';' expression ';' expression ')' statement
   49         | KEYWORD_FOR '(' • var_declaration ';' expression ';' ')' statement

    ID            shift, and go to state 19
    NUM           shift, and go to state 20
    FNUM          shift, and go to state 21
    KEYWORD_INT   shift, and go to state 1
    KEYWORD_VOID  shift, and go to state 2
    KEYWORD_NO    shift, and go to state 22
    ';'           shift, and go to state 132
    '('           shift, and go to state 23

    var_declaration      go to state 133
    type_specifier       go to state 94
    expression           go to state 134
    var                  go to state 25
    simple_expression    go to state 26
    additive_expression  go to state 27
    term                 go to state 28
    factor               go to state 29
    call                 go to state 30


State 124

   53 break_stmt: KEYWORD_BREAK ';' •

    $default  reduce using rule 53 (break_stmt)


State 125

   52 continue_stmt: KEYWORD_CONTINUE ';' •

    $default  reduce using rule 52 (continue_stmt)


State 126

   15 comment: comment • MULTI_LINE_ANNOTATION
   27 statement_list: statement_list statement comment •

    MULTI_LINE_ANNOTATION  shift, and go to state 14

    $default  reduce using rule 27 (statement_list)


State 127

   38 expression_stmt: expression ';' •

    $default  reduce using rule 38 (expression_stmt)


State 128

   10 cout_stmt: KEYWORD_OUT KEYWORD_DOUBLE_LESS ID • ';'

    ';'  shift, and go to state 135


State 129

   40 selection_stmt: KEYWORD_IF '(' expression • ')' statement
   41               | KEYWORD_IF '(' expression • ')' statement KEYWORD_ELSE statement

    ')'  shift, and go to state 136


State 130

   51 return_stmt: KEYWORD_RETURN expression ';' •

    $default  reduce using rule 51 (return_stmt)


State 131

   43 iteration_stmt: KEYWORD_WHILE '(' expression • $@1 ')' statement

    $default  reduce using rule 42 ($@1)

    $@1  go to state 137


State 132

   44 for_stmt: KEYWORD_FOR '(' ';' • expression ';' ')' statement
   47         | KEYWORD_FOR '(' ';' • expression ';' expression ')' statement

    ID          shift, and go to state 19
    NUM         shift, and go to state 20
    FNUM        shift, and go to state 21
    KEYWORD_NO  shift, and go to state 22
    '('         shift, and go to state 23

    expression           go to state 138
    var                  go to state 25
    simple_expression    go to state 26
    additive_expression  go to state 27
    term                 go to state 28
    factor               go to state 29
    call                 go to state 30


State 133

   48 for_stmt: KEYWORD_FOR '(' var_declaration • ';' expression ';' expression ')' statement
   49         | KEYWORD_FOR '(' var_declaration • ';' expression ';' ')' statement

    ';'  shift, and go to state 139


State 134

   45 for_stmt: KEYWORD_FOR '(' expression • ';' expression ';' ')' statement
   46         | KEYWORD_FOR '(' expression • ';' expression ';' expression ')' statement

    ';'  shift, and go to state 140


State 135

   10 cout_stmt: KEYWORD_OUT KEYWORD_DOUBLE_LESS ID ';' •

    $default  reduce using rule 10 (cout_stmt)


State 136

   40 selection_stmt: KEYWORD_IF '(' expression ')' • statement
   41               | KEYWORD_IF '(' expression ')' • statement KEYWORD_ELSE statement

    ID                shift, and go to state 19
    NUM               shift, and go to state 20
    FNUM              shift, and go to state 21
    KEYWORD_OUT       shift, and go to state 98
    KEYWORD_IF        shift, and go to state 99
    KEYWORD_RETURN    shift, and go to state 100
    KEYWORD_WHILE     shift, and go to state 101
    KEYWORD_NO        shift, and go to state 22
    KEYWORD_FOR       shift, and go to state 102
    KEYWORD_BREAK     shift, and go to state 103
    KEYWORD_CONTINUE  shift, and go to state 104
    ';'               shift, and go to state 105
    '('               shift, and go to state 23
    '{'               shift, and go to state 84

    cout_stmt            go to state 107
    compound_stmt        go to state 108
    statement            go to state 141
    expression_stmt      go to state 110
    selection_stmt       go to state 111
    iteration_stmt       go to state 112
    for_stmt             go to state 113
    return_stmt          go to state 114
    continue_stmt        go to state 115
    break_stmt           go to state 116
    expression           go to state 117
    var                  go to state 25
    simple_expression    go to state 26
    additive_expression  go to state 27
    term                 go to state 28
    factor               go to state 29
    call                 go to state 30


State 137

   43 iteration_stmt: KEYWORD_WHILE '(' expression $@1 • ')' statement

    ')'  shift, and go to state 142


State 138

   44 for_stmt: KEYWORD_FOR '(' ';' expression • ';' ')' statement
   47         | KEYWORD_FOR '(' ';' expression • ';' expression ')' statement

    ';'  shift, and go to state 143


State 139

   48 for_stmt: KEYWORD_FOR '(' var_declaration ';' • expression ';' expression ')' statement
   49         | KEYWORD_FOR '(' var_declaration ';' • expression ';' ')' statement

    ID          shift, and go to state 19
    NUM         shift, and go to state 20
    FNUM        shift, and go to state 21
    KEYWORD_NO  shift, and go to state 22
    '('         shift, and go to state 23

    expression           go to state 144
    var                  go to state 25
    simple_expression    go to state 26
    additive_expression  go to state 27
    term                 go to state 28
    factor               go to state 29
    call                 go to state 30


State 140

   45 for_stmt: KEYWORD_FOR '(' expression ';' • expression ';' ')' statement
   46         | KEYWORD_FOR '(' expression ';' • expression ';' expression ')' statement

    ID          shift, and go to state 19
    NUM         shift, and go to state 20
    FNUM        shift, and go to state 21
    KEYWORD_NO  shift, and go to state 22
    '('         shift, and go to state 23

    expression           go to state 145
    var                  go to state 25
    simple_expression    go to state 26
    additive_expression  go to state 27
    term                 go to state 28
    factor               go to state 29
    call                 go to state 30


State 141

   40 selection_stmt: KEYWORD_IF '(' expression ')' statement •
   41               | KEYWORD_IF '(' expression ')' statement • KEYWORD_ELSE statement

    KEYWORD_ELSE  shift, and go to state 146

    KEYWORD_ELSE  [reduce using rule 40 (selection_stmt)]
    $default      reduce using rule 40 (selection_stmt)


State 142

   43 iteration_stmt: KEYWORD_WHILE '(' expression $@1 ')' • statement

    ID                shift, and go to state 19
    NUM               shift, and go to state 20
    FNUM              shift, and go to state 21
    KEYWORD_OUT       shift, and go to state 98
    KEYWORD_IF        shift, and go to state 99
    KEYWORD_RETURN    shift, and go to state 100
    KEYWORD_WHILE     shift, and go to state 101
    KEYWORD_NO        shift, and go to state 22
    KEYWORD_FOR       shift, and go to state 102
    KEYWORD_BREAK     shift, and go to state 103
    KEYWORD_CONTINUE  shift, and go to state 104
    ';'               shift, and go to state 105
    '('               shift, and go to state 23
    '{'               shift, and go to state 84

    cout_stmt            go to state 107
    compound_stmt        go to state 108
    statement            go to state 147
    expression_stmt      go to state 110
    selection_stmt       go to state 111
    iteration_stmt       go to state 112
    for_stmt             go to state 113
    return_stmt          go to state 114
    continue_stmt        go to state 115
    break_stmt           go to state 116
    expression           go to state 117
    var                  go to state 25
    simple_expression    go to state 26
    additive_expression  go to state 27
    term                 go to state 28
    factor               go to state 29
    call                 go to state 30


State 143

   44 for_stmt: KEYWORD_FOR '(' ';' expression ';' • ')' statement
   47         | KEYWORD_FOR '(' ';' expression ';' • expression ')' statement

    ID          shift, and go to state 19
    NUM         shift, and go to state 20
    FNUM        shift, and go to state 21
    KEYWORD_NO  shift, and go to state 22
    '('         shift, and go to state 23
    ')'         shift, and go to state 148

    expression           go to state 149
    var                  go to state 25
    simple_expression    go to state 26
    additive_expression  go to state 27
    term                 go to state 28
    factor               go to state 29
    call                 go to state 30


State 144

   48 for_stmt: KEYWORD_FOR '(' var_declaration ';' expression • ';' expression ')' statement
   49         | KEYWORD_FOR '(' var_declaration ';' expression • ';' ')' statement

    ';'  shift, and go to state 150


State 145

   45 for_stmt: KEYWORD_FOR '(' expression ';' expression • ';' ')' statement
   46         | KEYWORD_FOR '(' expression ';' expression • ';' expression ')' statement

    ';'  shift, and go to state 151


State 146

   41 selection_stmt: KEYWORD_IF '(' expression ')' statement KEYWORD_ELSE • statement

    ID                shift, and go to state 19
    NUM               shift, and go to state 20
    FNUM              shift, and go to state 21
    KEYWORD_OUT       shift, and go to state 98
    KEYWORD_IF        shift, and go to state 99
    KEYWORD_RETURN    shift, and go to state 100
    KEYWORD_WHILE     shift, and go to state 101
    KEYWORD_NO        shift, and go to state 22
    KEYWORD_FOR       shift, and go to state 102
    KEYWORD_BREAK     shift, and go to state 103
    KEYWORD_CONTINUE  shift, and go to state 104
    ';'               shift, and go to state 105
    '('               shift, and go to state 23
    '{'               shift, and go to state 84

    cout_stmt            go to state 107
    compound_stmt        go to state 108
    statement            go to state 152
    expression_stmt      go to state 110
    selection_stmt       go to state 111
    iteration_stmt       go to state 112
    for_stmt             go to state 113
    return_stmt          go to state 114
    continue_stmt        go to state 115
    break_stmt           go to state 116
    expression           go to state 117
    var                  go to state 25
    simple_expression    go to state 26
    additive_expression  go to state 27
    term                 go to state 28
    factor               go to state 29
    call                 go to state 30


State 147

   43 iteration_stmt: KEYWORD_WHILE '(' expression $@1 ')' statement •

    $default  reduce using rule 43 (iteration_stmt)


State 148

   44 for_stmt: KEYWORD_FOR '(' ';' expression ';' ')' • statement

    ID                shift, and go to state 19
    NUM               shift, and go to state 20
    FNUM              shift, and go to state 21
    KEYWORD_OUT       shift, and go to state 98
    KEYWORD_IF        shift, and go to state 99
    KEYWORD_RETURN    shift, and go to state 100
    KEYWORD_WHILE     shift, and go to state 101
    KEYWORD_NO        shift, and go to state 22
    KEYWORD_FOR       shift, and go to state 102
    KEYWORD_BREAK     shift, and go to state 103
    KEYWORD_CONTINUE  shift, and go to state 104
    ';'               shift, and go to state 105
    '('               shift, and go to state 23
    '{'               shift, and go to state 84

    cout_stmt            go to state 107
    compound_stmt        go to state 108
    statement            go to state 153
    expression_stmt      go to state 110
    selection_stmt       go to state 111
    iteration_stmt       go to state 112
    for_stmt             go to state 113
    return_stmt          go to state 114
    continue_stmt        go to state 115
    break_stmt           go to state 116
    expression           go to state 117
    var                  go to state 25
    simple_expression    go to state 26
    additive_expression  go to state 27
    term                 go to state 28
    factor               go to state 29
    call                 go to state 30


State 149

   47 for_stmt: KEYWORD_FOR '(' ';' expression ';' expression • ')' statement

    ')'  shift, and go to state 154


State 150

   48 for_stmt: KEYWORD_FOR '(' var_declaration ';' expression ';' • expression ')' statement
   49         | KEYWORD_FOR '(' var_declaration ';' expression ';' • ')' statement

    ID          shift, and go to state 19
    NUM         shift, and go to state 20
    FNUM        shift, and go to state 21
    KEYWORD_NO  shift, and go to state 22
    '('         shift, and go to state 23
    ')'         shift, and go to state 155

    expression           go to state 156
    var                  go to state 25
    simple_expression    go to state 26
    additive_expression  go to state 27
    term                 go to state 28
    factor               go to state 29
    call                 go to state 30


State 151

   45 for_stmt: KEYWORD_FOR '(' expression ';' expression ';' • ')' statement
   46         | KEYWORD_FOR '(' expression ';' expression ';' • expression ')' statement

    ID          shift, and go to state 19
    NUM         shift, and go to state 20
    FNUM        shift, and go to state 21
    KEYWORD_NO  shift, and go to state 22
    '('         shift, and go to state 23
    ')'         shift, and go to state 157

    expression           go to state 158
    var                  go to state 25
    simple_expression    go to state 26
    additive_expression  go to state 27
    term                 go to state 28
    factor               go to state 29
    call                 go to state 30


State 152

   41 selection_stmt: KEYWORD_IF '(' expression ')' statement KEYWORD_ELSE statement •

    $default  reduce using rule 41 (selection_stmt)


State 153

   44 for_stmt: KEYWORD_FOR '(' ';' expression ';' ')' statement •

    $default  reduce using rule 44 (for_stmt)


State 154

   47 for_stmt: KEYWORD_FOR '(' ';' expression ';' expression ')' • statement

    ID                shift, and go to state 19
    NUM               shift, and go to state 20
    FNUM              shift, and go to state 21
    KEYWORD_OUT       shift, and go to state 98
    KEYWORD_IF        shift, and go to state 99
    KEYWORD_RETURN    shift, and go to state 100
    KEYWORD_WHILE     shift, and go to state 101
    KEYWORD_NO        shift, and go to state 22
    KEYWORD_FOR       shift, and go to state 102
    KEYWORD_BREAK     shift, and go to state 103
    KEYWORD_CONTINUE  shift, and go to state 104
    ';'               shift, and go to state 105
    '('               shift, and go to state 23
    '{'               shift, and go to state 84

    cout_stmt            go to state 107
    compound_stmt        go to state 108
    statement            go to state 159
    expression_stmt      go to state 110
    selection_stmt       go to state 111
    iteration_stmt       go to state 112
    for_stmt             go to state 113
    return_stmt          go to state 114
    continue_stmt        go to state 115
    break_stmt           go to state 116
    expression           go to state 117
    var                  go to state 25
    simple_expression    go to state 26
    additive_expression  go to state 27
    term                 go to state 28
    factor               go to state 29
    call                 go to state 30


State 155

   49 for_stmt: KEYWORD_FOR '(' var_declaration ';' expression ';' ')' • statement

    ID                shift, and go to state 19
    NUM               shift, and go to state 20
    FNUM              shift, and go to state 21
    KEYWORD_OUT       shift, and go to state 98
    KEYWORD_IF        shift, and go to state 99
    KEYWORD_RETURN    shift, and go to state 100
    KEYWORD_WHILE     shift, and go to state 101
    KEYWORD_NO        shift, and go to state 22
    KEYWORD_FOR       shift, and go to state 102
    KEYWORD_BREAK     shift, and go to state 103
    KEYWORD_CONTINUE  shift, and go to state 104
    ';'               shift, and go to state 105
    '('               shift, and go to state 23
    '{'               shift, and go to state 84

    cout_stmt            go to state 107
    compound_stmt        go to state 108
    statement            go to state 160
    expression_stmt      go to state 110
    selection_stmt       go to state 111
    iteration_stmt       go to state 112
    for_stmt             go to state 113
    return_stmt          go to state 114
    continue_stmt        go to state 115
    break_stmt           go to state 116
    expression           go to state 117
    var                  go to state 25
    simple_expression    go to state 26
    additive_expression  go to state 27
    term                 go to state 28
    factor               go to state 29
    call                 go to state 30


State 156

   48 for_stmt: KEYWORD_FOR '(' var_declaration ';' expression ';' expression • ')' statement

    ')'  shift, and go to state 161


State 157

   45 for_stmt: KEYWORD_FOR '(' expression ';' expression ';' ')' • statement

    ID                shift, and go to state 19
    NUM               shift, and go to state 20
    FNUM              shift, and go to state 21
    KEYWORD_OUT       shift, and go to state 98
    KEYWORD_IF        shift, and go to state 99
    KEYWORD_RETURN    shift, and go to state 100
    KEYWORD_WHILE     shift, and go to state 101
    KEYWORD_NO        shift, and go to state 22
    KEYWORD_FOR       shift, and go to state 102
    KEYWORD_BREAK     shift, and go to state 103
    KEYWORD_CONTINUE  shift, and go to state 104
    ';'               shift, and go to state 105
    '('               shift, and go to state 23
    '{'               shift, and go to state 84

    cout_stmt            go to state 107
    compound_stmt        go to state 108
    statement            go to state 162
    expression_stmt      go to state 110
    selection_stmt       go to state 111
    iteration_stmt       go to state 112
    for_stmt             go to state 113
    return_stmt          go to state 114
    continue_stmt        go to state 115
    break_stmt           go to state 116
    expression           go to state 117
    var                  go to state 25
    simple_expression    go to state 26
    additive_expression  go to state 27
    term                 go to state 28
    factor               go to state 29
    call                 go to state 30


State 158

   46 for_stmt: KEYWORD_FOR '(' expression ';' expression ';' expression • ')' statement

    ')'  shift, and go to state 163


State 159

   47 for_stmt: KEYWORD_FOR '(' ';' expression ';' expression ')' statement •

    $default  reduce using rule 47 (for_stmt)


State 160

   49 for_stmt: KEYWORD_FOR '(' var_declaration ';' expression ';' ')' statement •

    $default  reduce using rule 49 (for_stmt)


State 161

   48 for_stmt: KEYWORD_FOR '(' var_declaration ';' expression ';' expression ')' • statement

    ID                shift, and go to state 19
    NUM               shift, and go to state 20
    FNUM              shift, and go to state 21
    KEYWORD_OUT       shift, and go to state 98
    KEYWORD_IF        shift, and go to state 99
    KEYWORD_RETURN    shift, and go to state 100
    KEYWORD_WHILE     shift, and go to state 101
    KEYWORD_NO        shift, and go to state 22
    KEYWORD_FOR       shift, and go to state 102
    KEYWORD_BREAK     shift, and go to state 103
    KEYWORD_CONTINUE  shift, and go to state 104
    ';'               shift, and go to state 105
    '('               shift, and go to state 23
    '{'               shift, and go to state 84

    cout_stmt            go to state 107
    compound_stmt        go to state 108
    statement            go to state 164
    expression_stmt      go to state 110
    selection_stmt       go to state 111
    iteration_stmt       go to state 112
    for_stmt             go to state 113
    return_stmt          go to state 114
    continue_stmt        go to state 115
    break_stmt           go to state 116
    expression           go to state 117
    var                  go to state 25
    simple_expression    go to state 26
    additive_expression  go to state 27
    term                 go to state 28
    factor               go to state 29
    call                 go to state 30


State 162

   45 for_stmt: KEYWORD_FOR '(' expression ';' expression ';' ')' statement •

    $default  reduce using rule 45 (for_stmt)


State 163

   46 for_stmt: KEYWORD_FOR '(' expression ';' expression ';' expression ')' • statement

    ID                shift, and go to state 19
    NUM               shift, and go to state 20
    FNUM              shift, and go to state 21
    KEYWORD_OUT       shift, and go to state 98
    KEYWORD_IF        shift, and go to state 99
    KEYWORD_RETURN    shift, and go to state 100
    KEYWORD_WHILE     shift, and go to state 101
    KEYWORD_NO        shift, and go to state 22
    KEYWORD_FOR       shift, and go to state 102
    KEYWORD_BREAK     shift, and go to state 103
    KEYWORD_CONTINUE  shift, and go to state 104
    ';'               shift, and go to state 105
    '('               shift, and go to state 23
    '{'               shift, and go to state 84

    cout_stmt            go to state 107
    compound_stmt        go to state 108
    statement            go to state 165
    expression_stmt      go to state 110
    selection_stmt       go to state 111
    iteration_stmt       go to state 112
    for_stmt             go to state 113
    return_stmt          go to state 114
    continue_stmt        go to state 115
    break_stmt           go to state 116
    expression           go to state 117
    var                  go to state 25
    simple_expression    go to state 26
    additive_expression  go to state 27
    term                 go to state 28
    factor               go to state 29
    call                 go to state 30


State 164

   48 for_stmt: KEYWORD_FOR '(' var_declaration ';' expression ';' expression ')' statement •

    $default  reduce using rule 48 (for_stmt)


State 165

   46 for_stmt: KEYWORD_FOR '(' expression ';' expression ';' expression ')' statement •

    $default  reduce using rule 46 (for_stmt)
